@using FoodOrderApp.Models
@using FoodOrderApp.Services.CartService
@using FoodOrderApp.Services.MenuService
@inject IMenuService MenuService
@inject ICartService CartService

<div class="combo-dialog-backdrop @(Show ? "show" : "")" @onclick="HandleClose"></div>
<div class="combo-dialog @(Show ? "show" : "")">
    <div class="combo-content" @onclick:stopPropagation="true">
        <div class="combo-header">
            <h3>🍔 @ComboDeal.Name</h3>
            <button class="close-button" @onclick="HandleClose">×</button>
        </div>
        <div class="combo-details">
            @ComboDeal.Description
            <div class="combo-price">
                <span class="price">€@ComboDeal.Price</span>
            </div>
        </div>
        <div class="combo-footer">
            <button class="btn btn-menu" @onclick="AddToCart">Add to Cart</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public bool Show { get; set; }
    [Parameter] public EventCallback<bool> ShowChanged { get; set; }
    [Parameter] public required MenuItem ComboDeal { get; set; }
    
    private async Task HandleClose()
    {
        await ShowChanged.InvokeAsync(false);
    }

    private async Task AddToCart()
    {
        CartService.AddToCart(ComboDeal);
        await HandleClose();
    }
}
 