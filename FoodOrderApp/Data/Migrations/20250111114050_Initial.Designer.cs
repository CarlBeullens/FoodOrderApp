// <auto-generated />
using FoodOrderApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodOrderApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250111114050_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodOrderApp.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("FoodOrderApp.Models.MenuItem", b =>
                {
                    b.OwnsOne("FoodOrderApp.Models.NutritionalInfo", "NutritionalInfo", b1 =>
                        {
                            b1.Property<int>("MenuItemId")
                                .HasColumnType("int");

                            b1.Property<double>("Calories")
                                .HasColumnType("float");

                            b1.Property<double>("Carbohydrates")
                                .HasColumnType("float");

                            b1.Property<double>("Cholesterol")
                                .HasColumnType("float");

                            b1.Property<double>("Fiber")
                                .HasColumnType("float");

                            b1.Property<double>("Protein")
                                .HasColumnType("float");

                            b1.Property<double>("SaturatedFat")
                                .HasColumnType("float");

                            b1.Property<double>("Sodium")
                                .HasColumnType("float");

                            b1.Property<double>("Sugar")
                                .HasColumnType("float");

                            b1.Property<double>("TotalFat")
                                .HasColumnType("float");

                            b1.Property<double>("TransFat")
                                .HasColumnType("float");

                            b1.HasKey("MenuItemId");

                            b1.ToTable("MenuItems");

                            b1.WithOwner()
                                .HasForeignKey("MenuItemId");
                        });

                    b.Navigation("NutritionalInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
