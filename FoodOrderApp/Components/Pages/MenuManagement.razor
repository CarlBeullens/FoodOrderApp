@page "/menu"
@using FoodOrderApp.Enum
@using FoodOrderApp.Models
@using FoodOrderApp.Services.MenuService
@inject IMenuService MenuService

<h3>Menu Management</h3>

<!-- Add Form -->
<div class="form">
    <div class="form-body">
        <EditForm FormName="addMenuItemForm" Model="@NewItem" OnSubmit="@AddItem">
            <label for="name">Name:</label>
            <InputText id="name" @bind-Value="NewItem.Name" class="form-control" />

            <label for="price" class="mt-2">Price:</label>
            <InputNumber id="price" @bind-Value="NewItem.Price" class="form-control" />

            <label for="description">Description:</label>
            <InputText id="description" @bind-Value="NewItem.Description" class="form-control" />

            <label for="category" class="mt-2">Category:</label>
            <InputSelect id="category" @bind-Value="NewItem.Category" class="form-control">
                @foreach (var category in Enum.GetValues(typeof(Category)))
                {
                    <option value="@category">@category</option>
                }
            </InputSelect>

            <label for="imageUrl" class="mt-2">Image Url:</label>
            <InputText id="imageUrl" @bind-Value="NewItem.ImageUrl" class="form-control" />

            <label for="isAvailable" class="mt-2">Available:</label>
            <InputSelect id="isAvailable" @bind-Value="NewItem.IsAvailable" class="form-control">
                <option value="true">True</option>
                <option value="false">False</option>
            </InputSelect>

            <button type="submit" class="btn btn-save mt-3">Save</button>
        </EditForm>
    </div>
</div>

<!-- Menu Items Table -->
<table class="table mt-4">
    <thead>
    <tr>
        <th>Name</th>
        <th>Price</th>
        <th>Category</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in MenuItems)
    {
        <tr>
            <td>@item.Name</td>
            <td>€@item.Price</td>
            <td>@item.Category</td>
            <td>
                <button class="btn btn-update" @onclick="() => ShowUpdateModal(item)">Update</button>
                <button class="btn btn-delete" @onclick="() => DeleteItem(item.Id)">Delete</button>
            </td>
        </tr>
    }
    </tbody>
</table>

<!-- Update Modal -->
@if (IsVisibleUpdateModal)
{
<div class="modal" tabindex="-1" style="display:block">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Menu Item</h5>
            </div>
            <div class="modal-body">
                <EditForm FormName="updateMenuItemForm" Model="@ItemToUpdate" OnSubmit="@HandleUpdate">
                    <label for="updateName">Name:</label>
                    <InputText id="updateName" @bind-Value="ItemToUpdate.Name" class="form-control" />

                    <label for="updatePrice" class="mt-2">Price:</label>
                    <InputNumber id="updatePrice" @bind-Value="ItemToUpdate.Price" class="form-control" />

                    <label for="updateDescription" class="mt-2">Description:</label>
                    <InputText id="updateDescription" @bind-Value="ItemToUpdate.Description" class="form-control" />

                    <label for="updateCategory" class="mt-2">Category:</label>
                    <InputSelect id="updateCategory" @bind-Value="ItemToUpdate.Category" class="form-control">
                        @foreach (var category in Enum.GetValues(typeof(Category)))
                        {
                            <option value="@category">@category</option>
                        }
                    </InputSelect>

                    <label for="updateImageUrl" class="mt-2">Image URL:</label>
                    <InputText id="updateImageUrl" @bind-Value="ItemToUpdate.ImageUrl" class="form-control" />

                    <label for="updateIsAvailable" class="mt-2">Available:</label>
                    <InputSelect id="updateIsAvailable" @bind-Value="ItemToUpdate.IsAvailable" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </InputSelect>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseUpdateModal">Close</button>
                        <button type="submit" class="btn btn-save">Save</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
}


@code {
    private List<MenuItem> MenuItems = new();
    private MenuItem ItemToUpdate = new();
    private bool IsVisibleUpdateModal = false;

    [SupplyParameterFromForm]
    private MenuItem NewItem { get; set; } = new();

    protected override void OnInitialized()
    {
        LoadMenuItems();
    }

    private void AddItem()
    {
        MenuService.AddMenuItem(NewItem);
        LoadMenuItems();
        NewItem = new MenuItem();
    }
    
    private void HandleUpdate()
    {
        MenuService.UpdateMenuItem(ItemToUpdate);
        LoadMenuItems();
        CloseUpdateModal();
    }

    private void ShowUpdateModal(MenuItem item)
    {
        ItemToUpdate = new MenuItem 
        {
            Id = item.Id,
            Name = item.Name,
            Price = item.Price,
            Description = item.Description,
            Category = item.Category,
            ImageUrl = item.ImageUrl,
            IsAvailable = item.IsAvailable
        };
        
        IsVisibleUpdateModal = true;
    }
    
    private void CloseUpdateModal()
    {
        IsVisibleUpdateModal = false;
        ItemToUpdate = new();
    }

    private void DeleteItem(int id)
    {
        MenuService.DeleteMenuItem(id);
        LoadMenuItems();
    }

    private void LoadMenuItems()
    {
        MenuItems = MenuService.GetMenuItems();
    }
}