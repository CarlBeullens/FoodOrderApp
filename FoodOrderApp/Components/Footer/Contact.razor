@page "/contact"
@using FoodOrderApp.Models
@using FoodOrderApp.Services.EmailService
@inject IEmailService EmailService

<div class="contact-container">
    <h2>Contact Us</h2>
   
    <div class="contact-grid">
        <div class="contact-info">
            <h3>Get in Touch</h3>
            <p>Phone: (503) 555-0123</p>
            <p>Email: hello@blazingburger.com</p>
            <p>Address: 123 Flame Street, Brussels, Belgium</p>
            <p>Hours: Mon-Sun 11:00 AM - 10:00 PM</p>
        </div>
       
        <div class="contact-form">
            <h3>Send us a Message</h3>
            <EditForm Model="@contactForm" OnValidSubmit="@HandleSubmit">
                <DataAnnotationsValidator />
               
                <div class="form-group">
                    <label for="name">Name</label>
                    <InputText id="name" @bind-Value="contactForm.Name" class="form-control" />
                    <ValidationMessage For="@(() => contactForm.Name)" />
                </div>

                <div class="form-group">
                    <label for="email">Email</label>
                    <InputText id="email" @bind-Value="contactForm.Email" class="form-control" />
                    <ValidationMessage For="@(() => contactForm.Email)" />
                </div>

                <div class="form-group">
                    <label for="message">Message</label>
                    <InputTextArea id="message" @bind-Value="contactForm.Message" class="form-control" rows="4" />
                    <ValidationMessage For="@(() => contactForm.Message)" />
                </div>

                <button type="submit" class="btn btn-header">Send Message</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private ContactForm contactForm = new();

    private async Task HandleSubmit()
    {
        var success = await EmailService.SendEmailAsync(contactForm);

        if (success)
        {
            //show notification
        }
    }
}